services:
  # PostgreSQLデータベース（本番環境）
  db:
    image: postgres:15-alpine
    container_name: omu-db-prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-omu}
      POSTGRES_USER: ${POSTGRES_USER:-omu_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./postgres/backup:/backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-omu_user} -d ${POSTGRES_DB:-omu}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - omu-network

  # 本番アプリケーション
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: omu-app-prod
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: "postgresql://${POSTGRES_USER:-omu_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-omu}"
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - omu-network

  # リバースプロキシ（Nginx）
  nginx:
    image: nginx:alpine
    container_name: omu-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - omu-network

volumes:
  postgres_prod_data:
    driver: local

networks:
  omu-network:
    driver: bridge